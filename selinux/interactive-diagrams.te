policy_module(interactive-diagrams, 1.0.0)

require {
  type user_home_t;
  type user_home_dir_t;
  type tmp_t;
  type locale_t;
  type node_t;
  type bin_t;
  type etc_t;
  type default_t;
  type fs_t;
  type proc_t;
  type home_root_t;
  type sshd_t;
  type security_t;
  type user_tmp_t;

  type semanage_t;
  type unconfined_t;
  type setfiles_t;
  type user_devpts_t;
}       

# domain types
type idia_restricted_t; # child process, should be very restricted
type idia_web_t; # scotty-pastebin security context
type idia_web_exec_t; # scotty-pastebin executable file context
type idia_service_t; # eval-service security context
type idia_service_exec_t; # eval-service executable file context
type idia_service_sock_t; # UNIX socket files used for communication

type idia_db_t; # SQLite database
type idia_pkg_t; # directory with GHC packages
type idia_web_common_t; # html templates, css and other static content

# role system_r types idia_t;
role system_r types idia_web_t;

init_daemon_domain(idia_web_t, idia_web_exec_t)
init_daemon_domain(idia_service_t, idia_service_exec_t)

domain_type(idia_restricted_t)
role system_r types idia_restricted_t;

files_type(idia_pkg_t)
files_type(idia_web_common_t)

############################################################
# idia web 
############################################################

# Locale
allow idia_web_t locale_t:dir search;
allow idia_web_t locale_t:file { read getattr open };
allow idia_web_t locale_t:lnk_file read;
# TODO: need this for /etc/locale.alias access 
allow idia_web_t etc_t:file { read open getattr };

# I/O
allow idia_web_t self:fd use;
allow idia_web_t self:fifo_file { read write ioctl getattr };
allow idia_web_t sshd_t:fd use; # sshd_t?

# Securit & other 
allow idia_web_t self:process { execmem signal };
allow idia_web_t security_t:dir { getattr search }; # sys/fs/selinux
allow idia_web_t security_t:filesystem getattr; # why??
allow idia_web_t security_t:file { read open };

# networking, because the block below doesn't work :-(
# some of this can be removed with proper setup
allow idia_web_t self:capability { net_bind_service };
allow idia_web_t node_t:tcp_socket node_bind;
allow idia_web_t self:netlink_route_socket { write getattr read bind create nlmsg_read };
allow idia_web_t self:tcp_socket { read write bind create setopt accept listen };
allow idia_web_t self:udp_socket { create connect getattr };

# Communication with service
allow idia_web_t idia_service_sock_t:sock_file write;
allow idia_web_t idia_service_sock_t:dir search;
allow idia_web_t idia_service_t:unix_stream_socket connectto;
# killing processes that timeout
allow idia_web_t idia_restricted_t:process sigkill;
allow idia_web_t idia_service_t:process sigkill;

# Temp file
# the directory with temp files should be labeled with tmp_t
allow idia_web_t tmp_t:file { write getattr read create open ioctl };
allow idia_web_t self:unix_stream_socket { sendto connectto };
allow idia_web_t tmp_t:dir { write create add_name remove_name search };
allow idia_web_t tmp_t:sock_file { write create unlink getattr };

# Common files (css, js, html)
read_files_pattern(idia_web_t, idia_web_common_t, idia_web_common_t)

# # Seems like we also need this
# # probably for loading Display.hi and Preload.hi
# getattr_dirs_pattern(idia_web_t, idia_web_exec_t, idia_web_exec_t)
# Need this for: preloading sqlite
manage_dirs_pattern(idia_web_t, idia_web_exec_t, idia_web_exec_t)
write_files_pattern(idia_web_t, idia_web_exec_t, idia_web_exec_t)
allow idia_web_t idia_web_exec_t:file { create unlink };
# allow idia_web_t idia_web_exec_t:dir { write read add_name remove_name };
# allow idia_web_t idia_web_exec_t:file { write create unlink };

# Access to DB
rw_files_pattern(idia_web_t, idia_db_t, idia_db_t)
# this seems to be neccessary for accessing the db file, but I have no idea why
allow idia_web_t default_t:dir search;

# Allow web worker to access GHC & idia packages
getattr_dirs_pattern(idia_web_t, idia_pkg_t, idia_pkg_t)
exec_files_pattern(idia_web_t, idia_pkg_t, idia_pkg_t)
read_files_pattern(idia_web_t, idia_pkg_t, idia_pkg_t)
read_files_pattern(idia_web_t, idia_pkg_t, idia_pkg_t)


############################################################
# idia service
############################################################

# Locale
allow idia_service_t locale_t:dir search;
allow idia_service_t locale_t:file { read getattr open };
allow idia_service_t locale_t:lnk_file read;
# TODO: need this for /etc/locale.alias access 
allow idia_service_t etc_t:file { read open getattr };

# Security & other
allow idia_service_t security_t:dir { getattr search }; # sys/fs/selinux
allow idia_service_t security_t:filesystem getattr; # why??
allow idia_service_t security_t:file { read open };
allow idia_service_t self:process { execmem setsched };

# I/O
allow idia_service_t self:fd use;
allow idia_service_t self:fifo_file { read write ioctl getattr };
allow idia_service_t sshd_t:fd use; # sshd_t?

# Tmp files
# the directory with temp files should be labeled with tmp_t
allow idia_service_t tmp_t:file { write getattr read create open ioctl };
allow idia_service_t self:unix_stream_socket { sendto connectto };
allow idia_service_t tmp_t:dir { write getattr create add_name remove_name search };
allow idia_service_t tmp_t:sock_file { write create unlink getattr };
allow idia_service_t tmp_t:dir { write remove_name add_name };
allow idia_service_t tmp_t:file { write create unlink execute };


# For communication with the web interface
allow idia_service_sock_t fs_t:filesystem associate;
allow idia_service_t idia_service_sock_t:dir { write remove_name search add_name };
allow idia_service_t idia_service_sock_t:sock_file { getattr unlink create };

# for running gcc
allow idia_service_t bin_t:dir { search getattr };
allow idia_service_t bin_t:file { execute read open execute_no_trans getattr };
allow idia_service_t bin_t:lnk_file { read getattr };

# Dyntransition
domain_dyntrans_type(idia_service_t)
dyntrans_pattern(idia_service_t, idia_restricted_t)
dyntrans_pattern(idia_service_t, idia_service_t)
typebounds idia_service_t idia_restricted_t;
# When setcon(3) is used to set a different context on a new thread without an
# associated typebounds policy statement, then the call will return 'Operation not
# permitted' 


# Forking new processes & transitioning
allow idia_service_t self:capability { setuid setgid kill };
allow idia_service_t self:process    { signal fork setpgid setrlimit dyntransition getpgid }; 
# type=AVC msg=audit(1372668674.152:1177): avc:  denied  { dyntransition } for  pid=22437 comm="scotty-pastebin" scontext=unconfined_u:system_r:idia_service_t:s0-s0:c0.c1023 tcontext=system_u:system_r:idia_restricted_t:s0-s0:c0.c1023 tclass=process
#        Was caused by:
#                Policy constraint violation.

#                May require adding a type attribute to the domain or type to satisfy the constraint.

#                Constraints are defined in the policy sources in policy/constraints (general), policy/mcs (MCS), and policy/mls (MLS).
# The problem is that dyntransition requires that the user and the role of the subject and the target are the same

# Limits & restrictions
allow idia_service_t idia_restricted_t:process sigkill;
allow idia_service_t self:process sigkill; # otherwise it would violate the typebounds restriction


# it needs to access /home/vagrant and /home/vagrant/ghc for some reason
# TODO: search should be alright tho
allow idia_service_t user_home_t:dir { getattr search };
allow idia_service_t user_home_dir_t:dir search;
# this is for GHC settings and ghc-prim
allow idia_service_t user_home_t:file { read getattr ioctl open execute };

# Packages.
allow idia_service_t idia_pkg_t:dir { search getattr };
allow idia_service_t idia_pkg_t:file { read getattr ioctl open execute };

# TODO: Helper.hs
allow idia_service_t idia_web_exec_t:file { read getattr open ioctl };
allow idia_service_t idia_web_exec_t:dir { search getattr };


############################################################
# idia worker
############################################################

allow idia_restricted_t self:process { getpgid };

# For running gcc
# TODO: this should be fixed, restricted process should *not* be
# able to just execute random binary files
allow idia_restricted_t bin_t:dir { getattr search };
allow idia_restricted_t bin_t:file { read execute open getattr execute_no_trans };
allow idia_restricted_t bin_t:lnk_file { read getattr };
allow idia_restricted_t self:fifo_file { read write ioctl getattr };

##
# For locale stuff
# It actually works fine without having to access locales
allow idia_restricted_t etc_t:file { read getattr open };
allow idia_restricted_t locale_t:file { read getattr open };
allow idia_restricted_t locale_t:dir { search };
allow idia_restricted_t locale_t:lnk_file read;

# Packages. TODO: fix this
allow idia_restricted_t idia_pkg_t:dir search;
allow idia_restricted_t idia_pkg_t:file { read getattr ioctl open execute };

# TODO: Helper.hs
allow idia_restricted_t idia_web_exec_t:file { read getattr open ioctl };
allow idia_restricted_t idia_web_exec_t:dir search;

# No idia what this is for
allow idia_restricted_t self:process { setsched execmem };
allow idia_restricted_t fs_t:filesystem getattr;
allow idia_service_t fs_t:filesystem getattr;

# it appears that because of -threaded, idia_restricted_t wants
# to access inherited file descriptors and fifos from idia_web_t
# allow idia_restricted_t idia_web_t:fd use;
# allow idia_restricted_t idia_web_t:fifo_file write;

# This is probably something to do with libdir
allow idia_restricted_t user_home_dir_t:dir search;
allow idia_restricted_t user_home_t:dir search;

# For communicating with the server
allow idia_restricted_t tmp_t:sock_file write;
#allow idia_restricted_t idia_web_t:unix_stream_socket { sendto connectto getattr };
allow idia_restricted_t idia_service_t:unix_stream_socket { read write ioctl accept };
allow idia_restricted_t tmp_t:dir { search getattr };
allow idia_restricted_t tmp_t:file { getattr open read ioctl };
allow idia_restricted_t tmp_t:dir { write remove_name add_name };
allow idia_restricted_t tmp_t:file { write create unlink execute };

##################################################

# whut
allow idia_service_t home_root_t:dir search;
allow idia_restricted_t home_root_t:dir search;
allow idia_service_t default_t:dir search;

# # /dev/pts1
# # TODO: Why does it need stdout?
# # <stdout>: commitBuffer: permission denied (Permission denied)
allow idia_restricted_t sshd_t:fd use;
allow idia_service_t user_devpts_t:chr_file { write ioctl };
allow idia_restricted_t user_devpts_t:chr_file { write ioctl };



##################################################
# ATTN
# For dev purpuses only
#============= semanage_t ==============
allow semanage_t setfiles_t:process { siginh noatsecure rlimitinh };


#============= unconfined_t ==============
allow unconfined_t idia_web_t:process transition;
allow unconfined_t idia_db_t:file getattr;
allow unconfined_t idia_service_exec_t:file { read execute open getattr execute_no_trans };

#============= idia_restricted_t ==============
allow idia_restricted_t user_home_t:file { getattr open ioctl read };

########################################
# hmm this doesn't seem to work
type idia_web_port_t;
corenet_port(idia_web_t)

allow idia_web_t idia_web_port_t:tcp_socket name_bind;



############################################################

